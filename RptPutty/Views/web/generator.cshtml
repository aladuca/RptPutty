@model RptPutty.Models.Report

@{
    ViewBag.Title = "Report Generator";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    var model = @Html.Raw(Json.Encode(@Model))

    $("document").ready(function () {
        //Onload move default options to selected
        $("select.parameter-selection").each(function () {
            var parameterRoot = $(this).parents("div.parameter-root");
            var defaultOption = $(parameterRoot).find('select.parameter-discrete > option.parameter-default-value');
            if (defaultOption.length != 0) {
                $(this).append($('<option>', { value: defaultOption.val() }).text(defaultOption.text()));
            }
        }); //End of each div.parameter

        //On change dropdown handler
        $("select.parameter-discrete").change(function () {
            var parameterRoot = $(this).parents("div.parameter-root");
            if (!$(parameterRoot).find('select.parameter-selection').length) {
                //if ($(parameter).hasClass("custom") && !$(this).attr('multiple')) {
                $(parameterRoot).find('input:text').val($(this).val());
                //}
            }
        }); //End of change dropdown handler
        //Text input change handler
        $("input.parameter-custom").on("keyup", function () {
            var parameterRoot = $(this).parents("div.parameter-root");
            if (!$(parameterRoot).find('select.parameter-selection').length) {
                if ($(parameterRoot).find("select.parameter-discrete > option:contains(-- User Input --)").length == 0) {
                    $(parameterRoot).find("select.parameter-discrete").append($("<option>", { value: $(this).val() }).text("-- User Input --"));
                    $(parameterRoot).find("select.parameter-discrete").val($(this).val());
                }
                else {
                    $(parameterRoot).find("select.parameter-discrete > option:contains(-- User Input --)").val($(this).val())
                    $(parameterRoot).find("select.parameter-discrete").val($(this).val());
                }
            }
        }); //End of text input change handler
        //Selection button handler
        $('button.parameter-select').click(function () {
            var parameterRoot = $(this).parents("div.parameter-root");
            $(parameterRoot).find('select.parameter-discrete > option:selected').each(function () {
                valselection(parameterRoot, $(this).val(), $(this).text());
            }); //End of Selected Parameters
        });
        $('button.parameter-selectall').click(function () {
            var parameterRoot = $(this).parents("div.parameter-root");
            $(parameterRoot).find('select.parameter-discrete > option').each(function () {
                valselection(parameterRoot, $(this).val(), $(this).text());
            }); //End of Selected Parameters
        });
        $('button.parameter-selectcustom').click(function () {
            var parameterRoot = $(this).parents("div.parameter-root");
            var duplicated = false;
            var inputText = $.trim($(parameterRoot).find('input:text').val());
            $(parameterRoot).find('select.parameter-discrete > option').each(function () {
                if ($(this).val() == inputText) {
                    alert("Duplicated: Adding \x22" + $(this).text() + "\x22");
                    valselection(parameterRoot, $(this).val(), $(this).text());
                    duplicated = true;
                }
            });
            if (!duplicated && inputText != "") {
                valselection(parameterRoot, inputText, "Custom - " + inputText);
                $(parameterRoot).find('input:text').val("");
            }

        }); //End of select button
        //Verify if value is already in select box (if not add)
        function valselection(parameter, value, text) {
            var duplicated = false;
            $(parameter).find('select.parameter-selection > option').each(function () {
                if ($(this).val() == value) {
                    duplicated = true;
                }
            });
            if (!duplicated) {
                $(parameter).find('select.parameter-selection').append($('<option>', { value: value }).text(text));
            }
            return;
        }
        //Remove selected values
        $('button.parameter-removeall').click(function () {
            var parameterRoot = $(this).parents("div.parameter-root");
            $(parameterRoot).find('select.parameter-selection > option').each(function () {
                $(this).remove();
            });
        });
        $('button.parameter-remove').click(function () {
            var parameterRoot = $(this).parents("div.parameter-root");
            $(parameterRoot).find('select.parameter-selection > option:selected').each(function () {
                $(this).remove();
            });
        }); //End remove selected values


        //Submit button handler
        $("button.report-submit").click(function () {
            var validation = true;
            //Populate Data Structure
            $("div.parameter-root").each(function () {
                var paramName = $(this).find("div.parameter-name").text();
                var paramValues = new Array();
                var noinput = true;
                if ($(this).find('select.parameter-selection').length) {
                    //Parameters that allow multiple selections
                    if ($(this).find('select.parameter-selection > option').length) {
                        $(this).find('select.parameter-selection > option').each(function () {
                            paramValues.push($(this).val());
                        }); //End of each selected option
                        noinput = false;
                    }
                }
                else {
                    //Parameters that allow single selections
                    if ($(this).find('select').val() != "") {
                        paramValues.push($(this).find('select').val());
                        noinput = false;
                    }
                }
                //Change color of div if no input is detected
                if (noinput) {
                    $(this).addClass("panel-danger");
                    $(this).removeClass("panel-default");
                    validation = false;
                }
                else {
                    $(this).addClass("panel-default");
                    $(this).removeClass("panel-danger");

                    //Add Values to data model
                    for (var i = 0; i < model.Parameters.length; i++) {
                        if (model.Parameters[i].Name == paramName) {
                            model.Parameters[i].SelectedValues = paramValues;
                        }
                    }
                }
            }); //end of each div.parameter

            model.SelectedOutput = $("#output-format").val();
            var reportJob = {
                "report": model,
                "email": {
                    "to": [],
                    "cc": []
                }
            };
            if (!validation) { alert("Missing Input"); }
            if ($("#email").val() == "") {
                alert("Missing Email");
                validation = false;
            }
            else {
                reportJob.email.to.push($("#email").val());
            }
            if (validation) {
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    url: "@Url.Content("~/api/generator")",
                    data: JSON.stringify(reportJob),
                    success: function () {
                        alert("Report Submitted");
                    },
                    error: function () { alert("Report Failed to Submit"); }
                }); //End of function .ajax
            } //End if validation
        }); //End of function #submit button handleing
    }); //End of function document ready
</script>
<div class="col-lg-9">
    <h2>@Model.Title</h2>
    @foreach (var parameter in Model.Parameters)
    {
        var divclassstr = new List<string>();
        divclassstr.Add("parameter");
        if (parameter.MultipleSelect) { divclassstr.Add("multiple"); }
        else { divclassstr.Add("single"); }
        if (parameter.AllowCustomValues) { divclassstr.Add("custom"); }
        var clsstr = String.Join(" ", divclassstr);

        <div class="panel panel-default parameter-root">
            <div class="panel-heading container-fluid">
                <div class="col-lg-7 pull-left">@parameter.PromptText</div>
                <div class="col-lg-4 pull-right parameter-name text-right">@parameter.Name</div>
            </div>
            <div class="panel-body">
                <div class="col-lg-5">
                    @if (@parameter.DiscreteValues.Count > 0)
                    {
                        <select multiple=@parameter.MultipleSelect class="form-control parameter-discrete">
                            @foreach (var option in parameter.DiscreteValues)
                            {
                                if (parameter.DefaultValue == option.Value)
                                {
                                    <option value="@option.Value" class="parameter-default-value">@option.Description</option>
                                }
                                else
                                {
                                    <option value="@option.Value">@option.Description</option>
                                }

                            }
                        </select>
                    }
                    @if (parameter.AllowCustomValues)
                    {
                        <span>Enter a Value:</span>
                        <div class="@(parameter.MultipleSelect ? "input-group" : "form-group")">
                            <input type="text" class="form-control parameter-custom" value="@parameter.DefaultValue" />
                            @if (parameter.MultipleSelect)
                            {
                                <span class="input-group-btn">
                                    <button class="btn btn-default parameter-selectcustom" type="button">></button>
                                </span>
                            }
                        </div>
                    }
                </div>
                @if (parameter.MultipleSelect)
                {
                    <div class="col-sm-1">
                        <div class="btn-group-vertical" role="group">
                            <button type="button" class="btn btn-default parameter-select">
                                >
                            </button>
                            <button type="button" class="btn btn-default parameter-selectall">
                                >>
                            </button>
                        </div>
                    </div>
                    <div class="col-lg-5">
                        <select multiple=@parameter.MultipleSelect class="form-control parameter-selection"></select>
                        <div class="btn-group pull-right" role="group">
                            <button type="button" class="btn btn-default parameter-remove">Remove</button>
                            <button type="button" class="btn btn-default parameter-removeall">Remove All</button>
                        </div>
                    </div>

                }

            </div>
        </div>

    }
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="input-group">
                <span class="input-group-addon">E-mail:</span>
                <input type="text" class="form-control" id="email" />
            </div>
        </div>
    </div>
    <div class="well well-sm form-inline">
        <strong>Output Format:</strong>
        <select class="form-control" id="output-format">
            @foreach (var option in Model.Output)
            {
                if (option.Value == "5")
                {
                    <option value="@option.Value" selected="selected">@option.Description</option>
                }
                else
                {
                    <option value="@option.Value">@option.Description</option>
                }

            }
        </select>
    </div>

    <button type="button" class="btn btn-primary btn-block report-submit">Submit</button>
</div>